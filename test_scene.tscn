[gd_scene load_steps=11 format=3 uid="uid://bnn3uy7gkvy1l"]

[ext_resource type="Script" uid="uid://j7i16886ncbb" path="res://addons/stairs_generator/stairs.gd" id="1_uhqqe"]
[ext_resource type="Material" uid="uid://coxxeyeswqtvm" path="res://brick_material.tres" id="3_sasra"]

[sub_resource type="ProceduralSkyMaterial" id="ProceduralSkyMaterial_ia1lp"]
sky_horizon_color = Color(0.662243, 0.671743, 0.686743, 1)
ground_horizon_color = Color(0.662243, 0.671743, 0.686743, 1)

[sub_resource type="Sky" id="Sky_sasra"]
sky_material = SubResource("ProceduralSkyMaterial_ia1lp")

[sub_resource type="Environment" id="Environment_coq8p"]
background_mode = 2
sky = SubResource("Sky_sasra")
tonemap_mode = 2

[sub_resource type="GDScript" id="GDScript_ia1lp"]
script/source = "extends CharacterBody3D

const CAMERA_SENSITIVITY:= 1.0
const SPEED = 5.0
const JUMP_VELOCITY = 4.5

func _ready() -> void:
	if not Engine.is_editor_hint():
		Input.mouse_mode = Input.MOUSE_MODE_CAPTURED

func _physics_process(delta: float) -> void:
	# Add the gravity.
	if not is_on_floor():
		velocity += get_gravity() * delta

	# Handle jump.
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	
	var input_dir := Vector2(float(Input.is_key_pressed(KEY_D)) - float(Input.is_key_pressed(KEY_A)), float(Input.is_key_pressed(KEY_S)) - float(Input.is_key_pressed(KEY_W)))
	var direction := (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if direction:
		velocity.x = direction.x * SPEED
		velocity.z = direction.z * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)
		velocity.z = move_toward(velocity.z, 0, SPEED)
	
	move_and_slide()


func _unhandled_input(event: InputEvent) -> void:
	if not event.is_echo() and Input.is_key_pressed(KEY_ESCAPE):
		Input.mouse_mode = Input.MouseMode.MOUSE_MODE_VISIBLE if Input.mouse_mode == Input.MouseMode.MOUSE_MODE_CAPTURED else Input.MouseMode.MOUSE_MODE_CAPTURED
	
	if event is InputEventMouseMotion and Input.mouse_mode == Input.MouseMode.MOUSE_MODE_CAPTURED:
		var cam: Camera3D = $Camera3D
		event.relative /= -1000.0
		rotation.y += event.relative.x * CAMERA_SENSITIVITY
		cam.rotation.y = fmod(cam.rotation.y, PI)
		cam.rotation.x += event.relative.y * CAMERA_SENSITIVITY 
		cam.rotation.x = clampf(cam.rotation.x, -PI/2.1, PI/2.1)
		
"

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_ia1lp"]

[sub_resource type="WorldBoundaryShape3D" id="WorldBoundaryShape3D_ia1lp"]

[sub_resource type="QuadMesh" id="QuadMesh_sasra"]
size = Vector2(100, 100)
orientation = 1

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_ia1lp"]
albedo_color = Color(0.447059, 0.258824, 0.164706, 1)

[node name="Node3D" type="Node3D"]

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_coq8p")

[node name="Stairs" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.5, 0)
script = ExtResource("1_uhqqe")
step_count = 5
material = ExtResource("3_sasra")
uv_scale = Vector2(1.02, 1)
debug_color = Color(0, 0.6, 0.7, 0.42)
metadata/_custom_type_script = "uid://j7i16886ncbb"
metadata/_draw_collision_shape = true

[node name="CharacterBody3D" type="CharacterBody3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 2)
visible = false
script = SubResource("GDScript_ia1lp")

[node name="Camera3D" type="Camera3D" parent="CharacterBody3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.5, 0)

[node name="CollisionShape3D" type="CollisionShape3D" parent="CharacterBody3D"]
shape = SubResource("CapsuleShape3D_ia1lp")

[node name="Ground" type="StaticBody3D" parent="."]

[node name="CollisionShape3D" type="CollisionShape3D" parent="Ground"]
shape = SubResource("WorldBoundaryShape3D_ia1lp")
debug_fill = false

[node name="MeshInstance3D" type="MeshInstance3D" parent="Ground"]
mesh = SubResource("QuadMesh_sasra")
surface_material_override/0 = SubResource("StandardMaterial3D_ia1lp")
